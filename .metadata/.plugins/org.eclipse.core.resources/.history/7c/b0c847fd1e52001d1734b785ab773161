package avaliacaodegoleiros;

import java.util.ArrayList;
import java.util.Random;

public class Funcionamento {
	private ArrayList<Selecao> listaSelecao;
	private ArrayList<Chute> listaChute;

	public ArrayList <Chute> getListaChute() {
		return listaChute;
	}

	public void setListaChute(ArrayList <Chute> listaChute) {
		this.listaChute = listaChute;
	}
	
	public void addChute(Chute chute) {
		listaChute.add(chute);
	}

	public ArrayList<Selecao> getListaSelecao() {
		return listaSelecao;
	}

	public void setListaSelecao(ArrayList<Selecao> listaSelecao) {
		this.listaSelecao = listaSelecao;
	}
	
	public int[] relatorioChutesPerdidos() {
		int chutesFora = 0;
		int chutesTraveDireita = 0;
		int chutesTraveEsquerda = 0;
		int chutesTraveSuperior = 0;
		int[] relatorio = new int[4];
		
		for (Chute chute : listaChute) {
			if(chute.getX() == 0) {
				chutesFora++;
			}
			if(chute.getY() == 0 && chute.getY() != 0) {
				chutesFora++;
			}
			if(chute.getY() == 16 && chute.getX() != 0) {
				chutesFora++;
			}
			if(chute.getX() == 1) {
				chutesTraveSuperior++;
			}
			if(chute.getY() == 1 && chute.getY() != 1) {
				chutesTraveEsquerda++;
			}
			if(chute.getY() == 15 && chute.getX() != 1) {
				chutesTraveDireita++;
			}
			chute.setResultado(false);
		}
		relatorio[0] = chutesFora;
		relatorio[1] = chutesTraveEsquerda;
		relatorio[2] = chutesTraveDireita;
		relatorio[3] = chutesTraveSuperior;
		
		return relatorio;
	}
	
	public void chuteDirecionadGol() {
		Random randX = new Random();
		Random randY = new Random();
		int[] valorInicialXY = new int[2];
		ArrayList<int[]> atuacao;
		for (Chute chute : listaChute) {
			if(chute.getX() > 2) {
				if(chute.getY() > 2 && chute.getY() < 15) {
					switch(chute.getQuadrante()) {
					case 1:
						valorInicialXY[0] = randX.nextInt(4) + 2;
						valorInicialXY[1] = randY.nextInt(7) + 2;
						for (int i = 0; i < goleiro; i++) {
							
						}
					}	
				}
			}
		}
	}
	
}
